@echo off
setlocal enabledelayedexpansion

REM Anime-Site Authentication Recovery Script for Windows
REM –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (Windows)

echo.
echo üîß ANIME-SITE AUTHENTICATION RECOVERY TOOL (Windows)
echo =======================================================
echo.

set "action=%~1"
if "%action%"=="" set "action=full"

REM –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
:log_info
echo [INFO] %~1
goto :eof

:log_success
echo [SUCCESS] %~1
goto :eof

:log_warning
echo [WARNING] %~1
goto :eof

:log_error
echo [ERROR] %~1
goto :eof

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
:check_dependencies
call :log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

where node >nul 2>&1
if errorlevel 1 (
    call :log_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo –°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å https://nodejs.org/
    pause
    exit /b 1
)

where npm >nul 2>&1
if errorlevel 1 (
    call :log_error "npm –Ω–µ –Ω–∞–π–¥–µ–Ω"
    pause
    exit /b 1
)

where mongosh >nul 2>&1
if errorlevel 1 (
    call :log_warning "mongosh –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ë–î –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–∞"
) else (
    call :log_success "mongosh –Ω–∞–π–¥–µ–Ω"
)

where curl >nul 2>&1
if errorlevel 1 (
    call :log_warning "curl –Ω–µ –Ω–∞–π–¥–µ–Ω - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –±—É–¥—É—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã"
) else (
    call :log_success "curl –Ω–∞–π–¥–µ–Ω"
)

call :log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
goto :eof

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
:check_ports
call :log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤..."

netstat -an | findstr ":3000" >nul
if not errorlevel 1 (
    call :log_success "–ü–æ—Ä—Ç 3000 –∑–∞–Ω—è—Ç (–∫–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω)"
) else (
    call :log_warning "–ü–æ—Ä—Ç 3000 —Å–≤–æ–±–æ–¥–µ–Ω (–∫–ª–∏–µ–Ω—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω)"
)

netstat -an | findstr ":5000" >nul
if not errorlevel 1 (
    call :log_success "–ü–æ—Ä—Ç 5000 –∑–∞–Ω—è—Ç (—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω)"
) else (
    call :log_warning "–ü–æ—Ä—Ç 5000 —Å–≤–æ–±–æ–¥–µ–Ω (—Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω)"
)

netstat -an | findstr ":27017" >nul
if not errorlevel 1 (
    call :log_success "–ü–æ—Ä—Ç 27017 –∑–∞–Ω—è—Ç (MongoDB –∑–∞–ø—É—â–µ–Ω)"
) else (
    call :log_warning "–ü–æ—Ä—Ç 27017 —Å–≤–æ–±–æ–¥–µ–Ω (MongoDB –Ω–µ –∑–∞–ø—É—â–µ–Ω)"
)

goto :eof

REM –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
:stop_services
call :log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."

REM –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 3000 –∏ 5000
for /f "tokens=5" %%a in ('netstat -aon ^| findstr ":3000"') do (
    if not "%%a"=="0" (
        call :log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É 3000 (PID: %%a)"
        taskkill /PID %%a /F >nul 2>&1
    )
)

for /f "tokens=5" %%a in ('netstat -aon ^| findstr ":5000"') do (
    if not "%%a"=="0" (
        call :log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É 5000 (PID: %%a)"
        taskkill /PID %%a /F >nul 2>&1
    )
)

call :log_success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
goto :eof

REM –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
:clean_cache
call :log_info "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

if exist "node_modules" (
    call :log_info "–£–¥–∞–ª–µ–Ω–∏–µ node_modules..."
    rmdir /s /q "node_modules" 2>nul
)

if exist "client\node_modules" (
    call :log_info "–£–¥–∞–ª–µ–Ω–∏–µ client\node_modules..."
    rmdir /s /q "client\node_modules" 2>nul
)

if exist "server\node_modules" (
    call :log_info "–£–¥–∞–ª–µ–Ω–∏–µ server\node_modules..."
    rmdir /s /q "server\node_modules" 2>nul
)

if exist "logs" (
    call :log_info "–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤..."
    del /q "logs\*.*" 2>nul
)

REM –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
del /s /q "*.log" 2>nul
del /s /q ".DS_Store" 2>nul

call :log_success "–ö—ç—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
goto :eof

REM –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
:reinstall_dependencies
call :log_info "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

if exist "package.json" (
    call :log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install
    if errorlevel 1 (
        call :log_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        goto :eof
    )
)

if exist "client\package.json" (
    call :log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd client
    npm install
    if errorlevel 1 (
        call :log_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        cd ..
        goto :eof
    )
    cd ..
)

if exist "server\package.json" (
    call :log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd server
    npm install
    if errorlevel 1 (
        call :log_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        cd ..
        goto :eof
    )
    cd ..
)

call :log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
goto :eof

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
:check_configuration
call :log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

if not exist "server\.env" (
    call :log_warning "–§–∞–π–ª server\.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    if exist "server\.env.example" (
        call :log_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .env.example –≤ .env..."
        copy "server\.env.example" "server\.env" >nul
        call :log_warning "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ server\.env —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
    )
)

if not exist "client\.env" (
    call :log_warning "–§–∞–π–ª client\.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    if exist "client\.env.example" (
        call :log_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .env.example –≤ .env..."
        copy "client\.env.example" "client\.env" >nul
    )
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if exist "server\.env" (
    findstr /C:"JWT_SECRET=" "server\.env" >nul
    if errorlevel 1 (
        call :log_error "JWT_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ server\.env"
        goto :eof
    )
    
    findstr /C:"MONGODB_URI=" "server\.env" >nul
    if errorlevel 1 (
        call :log_error "MONGODB_URI –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ server\.env"
        goto :eof
    )
)

call :log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
goto :eof

REM –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
:start_services
call :log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."

if exist "server\package.json" (
    call :log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..."
    cd server
    start /B npm run dev > ..\server.log 2>&1
    cd ..
    
    call :log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
    timeout /t 10 /nobreak >nul
    
    where curl >nul 2>&1
    if not errorlevel 1 (
        curl -s http://localhost:5000/api/auth/test >nul 2>&1
        if not errorlevel 1 (
            call :log_success "–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        ) else (
            call :log_warning "–°–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
        )
    )
)

if exist "client\package.json" (
    call :log_info "–ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞..."
    cd client
    start /B npm start > ..\client.log 2>&1
    cd ..
    
    call :log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞..."
    timeout /t 15 /nobreak >nul
    call :log_success "–ö–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ http://localhost:3000)"
)

goto :eof

REM –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
:test_system
call :log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."

where curl >nul 2>&1
if errorlevel 1 (
    call :log_warning "curl –Ω–µ –Ω–∞–π–¥–µ–Ω - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ"
    goto :eof
)

curl -s http://localhost:5000/api/auth/test >nul 2>&1
if not errorlevel 1 (
    call :log_success "–°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç"
) else (
    call :log_error "–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
)

curl -s http://localhost:3000 >nul 2>&1
if not errorlevel 1 (
    call :log_success "–ö–ª–∏–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"
) else (
    call :log_error "–ö–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
)

goto :eof

REM –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
:create_test_user
call :log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."

where curl >nul 2>&1
if errorlevel 1 (
    call :log_warning "curl –Ω–µ –Ω–∞–π–¥–µ–Ω - —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–ø—É—â–µ–Ω–æ"
    goto :eof
)

curl -s -X POST http://localhost:5000/api/auth/register ^
    -H "Content-Type: application/json" ^
    -d "{\"username\":\"testuser\",\"email\":\"test@anime-site.local\",\"password\":\"TestPassword123\",\"confirmPassword\":\"TestPassword123\"}" >nul 2>&1

if not errorlevel 1 (
    call :log_success "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω"
    echo Email: test@anime-site.local
    echo Password: TestPassword123
) else (
    call :log_warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
)

goto :eof

REM –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
:main
if "%action%"=="check" (
    call :log_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã..."
    call :check_dependencies
    call :check_ports
    call :check_configuration
) else if "%action%"=="clean" (
    call :log_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏..."
    call :stop_services
    call :clean_cache
) else if "%action%"=="install" (
    call :log_info "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    call :reinstall_dependencies
) else if "%action%"=="start" (
    call :log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    call :start_services
    call :test_system
) else if "%action%"=="test" (
    call :log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
    call :test_system
) else if "%action%"=="user" (
    call :log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
    call :create_test_user
) else (
    call :log_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
    call :check_dependencies
    call :stop_services
    call :clean_cache
    call :reinstall_dependencies
    call :check_configuration
    call :start_services
    timeout /t 5 /nobreak >nul
    call :test_system
    call :create_test_user
)

echo.
call :log_success "–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo.
echo üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo   %~nx0 check    - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
echo   %~nx0 clean    - –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
echo   %~nx0 install  - –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo   %~nx0 start    - –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo   %~nx0 test     - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
echo   %~nx0 user     - –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo   %~nx0 full     - –ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
echo.
echo üåê –°—Å—ã–ª–∫–∏:
echo   –ö–ª–∏–µ–Ω—Ç: http://localhost:3000
echo   –°–µ—Ä–≤–µ—Ä: http://localhost:5000
echo   API —Ç–µ—Å—Ç: http://localhost:5000/api/auth/test
echo.

goto :eof

REM –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
call :main

pause