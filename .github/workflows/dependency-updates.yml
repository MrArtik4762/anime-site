name: Dependency Updates

on:
  schedule:
    # Запуск каждый понедельник в 9:00 утра по UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Run in dry-run mode (no updates will be made)'
        required: false
        default: false
        type: boolean
      force:
        description: 'Force update even if no new versions are available'
        required: false
        default: false
        type: boolean

jobs:
  check-updates:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    outputs:
      client-updates: ${{ steps.check.outputs.client-updates }}
      server-updates: ${{ steps.check.outputs.server-updates }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Check for client dependency updates
        id: client
        run: |
          cd client
          echo "Checking for client dependency updates..."
          updates=$(npm outdated --json 2>/dev/null || echo '{}')
          echo "client-updates=$updates" >> $GITHUB_OUTPUT

      - name: Check for server dependency updates
        id: server
        run: |
          cd server
          echo "Checking for server dependency updates..."
          updates=$(npm outdated --json 2>/dev/null || echo '{}')
          echo "server-updates=$updates" >> $GITHUB_OUTPUT

  create-pr:
    name: Create Pull Request for Updates
    runs-on: ubuntu-latest
    needs: check-updates
    if: github.event_name == 'schedule' || github.event.inputs.force == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update client dependencies
        if: needs.check-updates.outputs.client-updates != '{}'
        run: |
          cd client
          if [ "${{ github.event.inputs.dry-run }}" != "true" ]; then
            npm update
            npm audit fix
          fi
          echo "Client dependencies updated"

      - name: Update server dependencies
        if: needs.check-updates.outputs.server-updates != '{}'
        run: |
          cd server
          if [ "${{ github.event.inputs.dry-run }}" != "true" ]; then
            npm update
            npm audit fix
          fi
          echo "Server dependencies updated"

      - name: Generate PR description
        id: pr-desc
        run: |
          client_updates=$(echo "${{ needs.check-updates.outputs.client-updates }}" | jq -r 'if . == "{}" then "No" else "Yes" end')
          server_updates=$(echo "${{ needs.check-updates.outputs.server-updates }}" | jq -r 'if . == "{}" then "No" else "Yes" end')
          
          cat > /tmp/pr-description.md << EOF
          ## Dependency Updates

          This PR updates dependencies for the anime-site project.

          ### Updated Components
          - **Client**: $client_updates
          - **Server**: $server_updates

          ### Changes Made
          - Updated npm packages to latest compatible versions
          - Fixed security vulnerabilities where possible
          - Ran \`npm audit fix\` to address known issues

          ### Testing
          Please verify that all functionality works as expected after these updates.

          ### Notes
          - These updates were automatically generated by GitHub Actions
          - Manual review is recommended before merging
          - Test thoroughly before deploying to production
          EOF

          echo "pr-description<<EOF" >> $GITHUB_OUTPUT
          cat /tmp/pr-description.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore(deps): Update dependencies"
          body: ${{ steps.pr-desc.outputs.pr-description }}
          branch: "dependencies/update-$(date +%Y%m%d-%H%M%S)"
          commit-message: "chore(deps): Update dependencies"
          labels: dependencies, automated
          draft: true

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [check-updates, create-pr]
    if: always()
    steps:
      - name: Send success notification
        if: success()
        run: |
          echo "✅ Dependency update check completed successfully!"
          echo "Client updates: ${{ needs.check-updates.outputs.client-updates != '{}' && 'Available' || 'None' }}"
          echo "Server updates: ${{ needs.check-updates.outputs.server-updates != '{}' && 'Available' || 'None' }}"

      - name: Send failure notification
        if: failure()
        run: |
          echo "❌ Dependency update check failed!"
          echo "Please check the logs for details."